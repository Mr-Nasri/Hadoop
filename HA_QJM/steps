QJM Steps
=========
1. Setup zookeeper quorum and make sure that it is healthy
	- ./zookeeper-3.4.5/bin/zkServer.sh start
  	- ./zookeeper-3.4.5/bin/zkCli.sh -server nn1.dilithium.com:2181

	or

[hdfs@nn2 ~]$ zkServer.sh status
ZooKeeper JMX enabled by default
Using config: /opt/cluster/zoo/bin/../conf/zoo.cfg
Mode: follower

2. Setup core and hdfs file on each node as given.

3. Start Journalnode on all journal node machines
	- hadoop-daemon.sh start journalnode

4. Format namenode (Do not run this command, if you already have a NN runing and want to update it to HA)
	- hdfs namenode -format

5. Initialize shared edits for Journal node to see:
        - hdfs namenode -initializeSharedEdits -force

Note:	
  - namenode must be stopped for this step;
  - Only run this if you have not executed step4.
  	- Means that there was already a single Namenode and now you need to initialize the shared edits for Journals.
  	- You must not use initialize command if we are formating the Namenode as it will automatically initiallize the Journals
	  node directories
        

6. Format zkFC
	- hdfs zkfc -formatZK -force

7. Start namenode
	- hadoop-daemon.sh start namenode

8. Start ZKFC
	- hadoop-daemon.sh start zkfc

9. Bootstrap StandbyNamenode
	- hdfs namenode -bootstrapStandby

10. Start Namenode on standby
	- hadoop-daemon.sh start namenode

11. Start ZKFC on standy
	- hadoop-daemon.sh start zkfc

Now your cluster is HA with one active Namenode

[hdfs@nn1 ~]$ hdfs haadmin -getServiceState nn1
active
[hdfs@nn1 ~]$ hdfs haadmin -getServiceState nn2
standby

The "start-dfs.sh" script understands that it is a HA with Journal nodes and automatically starts:
	- Both namenodes
	- All Journal nodes
	- Datanode nodes
	- Both ZkFC

Note: Make sure you start the ZK quorum before hand.

[hdfs@nn1 ~]$ jps
7828 Jps
7336 JournalNode
7512 DFSZKFailoverController
7162 NameNode

